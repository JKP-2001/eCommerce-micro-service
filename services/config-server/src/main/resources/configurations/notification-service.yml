spring:
  data:
    mongodb:
      username: jkp
      password: password
      host: localhost
      database: customer
      authentication-database: admin
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: paymentGroup,orderGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.type.mapping: orderConfirmation:com.org.microservice.notification.kafka.order.OrderConfirmation, paymentConfirmation:com.org.microservice.notification.kafka.payment.PaymentNotificationRequest
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer

  mail:
    host: localhost
    port: 1025
    username: jkp
    password: password
    properties:
      mail:
        smtp:
          trust: "*"
        auth: true
        starttls:
          enabled: true
        connectiontimeout: 5000
        timeout: 3000
        writetimeout: 5000

server:
  port: 8080


#  spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#  spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer